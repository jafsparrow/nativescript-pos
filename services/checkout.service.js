"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var CheckOutService = (function () {
    function CheckOutService() {
        this.lineItems = [];
    }
    CheckOutService.prototype.addProductToCart = function (product, quantity) {
        console.log("product name is " + product.name + " and quantitiy is " + quantity);
        var lineItem = Object.assign({}, product);
        lineItem.id = product.id;
        lineItem.quantity = quantity;
        lineItem.totalPrice = product.price * quantity;
        var index = this.lineItems.findIndex(function (item) {
            return item.id === product.id;
        });
        if (index > -1) {
            // edit the current item .
            this.lineItems[index].quantity = quantity;
            this.lineItems[index].totalPrice = quantity * product.price;
        }
        else {
            this.lineItems.push(lineItem);
        }
        console.log("the length now is " + this.lineItems.length);
        console.log(this.lineItems);
    };
    CheckOutService.prototype.removeProductFromCart = function (product) {
        // const index = this.lineItems.indexOf(product);
        var filteredItems = this.lineItems.filter(function (item) {
            return item.id !== product.id;
        });
        this.lineItems = filteredItems;
    };
    CheckOutService.prototype.changeProdcutQuantity = function (product, newQuantity) {
        var lineItem = Object.assign({}, product);
        lineItem.quantity = newQuantity;
        lineItem.totalPrice = product.price * newQuantity;
        var index = this.lineItems.findIndex(function (item) {
            return item.product.id === product.id;
        });
        Object.assign(this.lineItems[index], lineItem);
    };
    CheckOutService.prototype.editProductFromCart = function (product) {
    };
    CheckOutService.prototype.getTheCartProductCount = function () {
        return this.lineItems.length;
    };
    CheckOutService.prototype.getTheCart = function () {
        console.log('from service fetching cart item.');
        console.log(this.lineItems);
        return this.lineItems;
    };
    CheckOutService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [])
    ], CheckOutService);
    return CheckOutService;
}());
exports.CheckOutService = CheckOutService;
//# sourceMappingURL=data:application/json;base64,